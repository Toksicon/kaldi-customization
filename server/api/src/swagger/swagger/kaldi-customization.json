{
    "swagger": "2.0",
    "info": {
        "description": "Kaldi Customization Server.",
        "version": "1.0.0",
        "title": "Kaldi Customization Server"
    },
    "host": "localhost",
    "basePath": "/api/v1",
    "tags": [
        {
            "name": "project",
            "description": "Operations about projects"
        },
        {
            "name": "user",
            "description": "Operations about user"
        }
    ],
    "schemes": [
        "https",
        "http"
    ],
    "paths": {
        "/project": {
            "post": {
                "tags": [
                    "project"
                ],
                "summary": "Create a new project",
                "description": "",
                "operationId": "createProject",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Project object that needs to be created",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "project_auth": [
                            "write:projects",
                            "read:projects"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "project"
                ],
                "summary": "Update an existing project",
                "description": "",
                "operationId": "updateProject",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Project object that needs to be updated",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid UUID supplied"
                    },
                    "404": {
                        "description": "Project not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [
                    {
                        "project_auth": [
                            "write:projects",
                            "read:projects"
                        ]
                    }
                ]
            }
        },
        "/project/{projectUuid}": {
            "get": {
                "tags": [
                    "project"
                ],
                "summary": "Find project by UUID",
                "description": "Returns a single project",
                "operationId": "getProjectByUuid",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "projectUuid",
                        "in": "path",
                        "description": "UUID of project to return",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID supplied"
                    },
                    "404": {
                        "description": "Project not found"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "project"
                ],
                "summary": "Deletes a project",
                "description": "",
                "operationId": "deleteProject",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "api_key",
                        "in": "header",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "projectUuid",
                        "in": "path",
                        "description": "Project UUID to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid UUID supplied"
                    },
                    "404": {
                        "description": "Project not found"
                    }
                },
                "security": [
                    {
                        "project_auth": [
                            "write:projects",
                            "read:projects"
                        ]
                    }
                ]
            }
        },
        "/user": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Create user",
                "description": "This can only be done by the logged in user.",
                "operationId": "createUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created user object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/user/login": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Logs user into the system",
                "description": "",
                "operationId": "loginUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "The user name for login",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The password for login in clear text",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {
                            "X-Rate-Limit": {
                                "type": "integer",
                                "format": "int32",
                                "description": "calls per hour allowed by the user"
                            },
                            "X-Expires-After": {
                                "type": "string",
                                "format": "date-time",
                                "description": "date in UTC when token expires"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username/password supplied"
                    }
                }
            }
        },
        "/user/logout": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Logs out current logged in user session",
                "description": "",
                "operationId": "logoutUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "project_auth": {
            "type": "oauth2",
            "authorizationUrl": "https://petstore.swagger.io/oauth/authorize",
            "flow": "implicit",
            "scopes": {
                "write:projects": "modify projects in your account",
                "read:projects": "read your projects"
            }
        },
        "api_key": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
        }
    },
    "definitions": {
        "Project": {
            "type": "object",
            "required": [
                "uuid",
                "name"
            ],
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "username": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "userStatus": {
                    "type": "integer",
                    "format": "int32",
                    "description": "User Status"
                }
            }
        }
    }
}
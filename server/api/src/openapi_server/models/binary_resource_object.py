# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class BinaryResourceObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, upfile=None):  # noqa: E501
        """BinaryResourceObject - a model defined in OpenAPI

        :param upfile: The upfile of this BinaryResourceObject.  # noqa: E501
        :type upfile: file
        """
        self.openapi_types = {
            'upfile': file
        }

        self.attribute_map = {
            'upfile': 'upfile'
        }

        self._upfile = upfile

    @classmethod
    def from_dict(cls, dikt) -> 'BinaryResourceObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BinaryResourceObject of this BinaryResourceObject.  # noqa: E501
        :rtype: BinaryResourceObject
        """
        return util.deserialize_model(dikt, cls)

    @property
    def upfile(self):
        """Gets the upfile of this BinaryResourceObject.

        File object that needs to be uploaded  # noqa: E501

        :return: The upfile of this BinaryResourceObject.
        :rtype: file
        """
        return self._upfile

    @upfile.setter
    def upfile(self, upfile):
        """Sets the upfile of this BinaryResourceObject.

        File object that needs to be uploaded  # noqa: E501

        :param upfile: The upfile of this BinaryResourceObject.
        :type upfile: file
        """
        if upfile is None:
            raise ValueError("Invalid value for `upfile`, must not be `None`")  # noqa: E501

        self._upfile = upfile

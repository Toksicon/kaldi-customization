# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.audio import Audio
from openapi_server import util

from openapi_server.models.audio import Audio  # noqa: E501

class DecodeAudio(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, transcripts=None, audio=None, session_uuid=None):  # noqa: E501
        """DecodeAudio - a model defined in OpenAPI

        :param transcripts: The transcripts of this DecodeAudio.  # noqa: E501
        :type transcripts: List[object]
        :param audio: The audio of this DecodeAudio.  # noqa: E501
        :type audio: Audio
        :param session_uuid: The session_uuid of this DecodeAudio.  # noqa: E501
        :type session_uuid: str
        """
        self.openapi_types = {
            'transcripts': List[object],
            'audio': Audio,
            'session_uuid': str
        }

        self.attribute_map = {
            'transcripts': 'transcripts',
            'audio': 'audio',
            'session_uuid': 'session_uuid'
        }

        self._transcripts = transcripts
        self._audio = audio
        self._session_uuid = session_uuid

    @classmethod
    def from_dict(cls, dikt) -> 'DecodeAudio':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DecodeAudio of this DecodeAudio.  # noqa: E501
        :rtype: DecodeAudio
        """
        return util.deserialize_model(dikt, cls)

    @property
    def transcripts(self):
        """Gets the transcripts of this DecodeAudio.


        :return: The transcripts of this DecodeAudio.
        :rtype: List[object]
        """
        return self._transcripts

    @transcripts.setter
    def transcripts(self, transcripts):
        """Sets the transcripts of this DecodeAudio.


        :param transcripts: The transcripts of this DecodeAudio.
        :type transcripts: List[object]
        """

        self._transcripts = transcripts

    @property
    def audio(self):
        """Gets the audio of this DecodeAudio.


        :return: The audio of this DecodeAudio.
        :rtype: Audio
        """
        return self._audio

    @audio.setter
    def audio(self, audio):
        """Sets the audio of this DecodeAudio.


        :param audio: The audio of this DecodeAudio.
        :type audio: Audio
        """

        self._audio = audio

    @property
    def session_uuid(self):
        """Gets the session_uuid of this DecodeAudio.


        :return: The session_uuid of this DecodeAudio.
        :rtype: str
        """
        return self._session_uuid

    @session_uuid.setter
    def session_uuid(self, session_uuid):
        """Sets the session_uuid of this DecodeAudio.


        :param session_uuid: The session_uuid of this DecodeAudio.
        :type session_uuid: str
        """

        self._session_uuid = session_uuid

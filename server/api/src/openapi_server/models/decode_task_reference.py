# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class DecodeTaskReference(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, decode_uuid=None):  # noqa: E501
        """DecodeTaskReference - a model defined in OpenAPI

        :param decode_uuid: The decode_uuid of this DecodeTaskReference.  # noqa: E501
        :type decode_uuid: str
        """
        self.openapi_types = {
            'decode_uuid': str
        }

        self.attribute_map = {
            'decode_uuid': 'decode_uuid'
        }

        self._decode_uuid = decode_uuid

    @classmethod
    def from_dict(cls, dikt) -> 'DecodeTaskReference':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DecodeTaskReference of this DecodeTaskReference.  # noqa: E501
        :rtype: DecodeTaskReference
        """
        return util.deserialize_model(dikt, cls)

    @property
    def decode_uuid(self):
        """Gets the decode_uuid of this DecodeTaskReference.


        :return: The decode_uuid of this DecodeTaskReference.
        :rtype: str
        """
        return self._decode_uuid

    @decode_uuid.setter
    def decode_uuid(self, decode_uuid):
        """Sets the decode_uuid of this DecodeTaskReference.


        :param decode_uuid: The decode_uuid of this DecodeTaskReference.
        :type decode_uuid: str
        """

        self._decode_uuid = decode_uuid

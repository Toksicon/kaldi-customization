openapi: 3.0.1
info:
  title: Kaldi Customization Server
  description: Kaldi Customization Server.
  version: 1.0.0
servers:
- url: https://localhost/api/v1
- url: http://localhost/api/v1
tags:
- name: project
  description: Operations about projects
- name: user
  description: Operations about user
paths:
  /project:
    put:
      tags:
      - project
      summary: Update an existing project
      operationId: update_project
      requestBody:
        description: Project object that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      responses:
        400:
          description: Invalid UUID supplied
          content: {}
        404:
          description: Project not found
          content: {}
        405:
          description: Validation exception
          content: {}
      security:
      - project_auth:
        - write:projects
        - read:projects
      x-openapi-router-controller: swagger_server.controllers.project_controller
    post:
      tags:
      - project
      summary: Create a new project
      operationId: create_project
      requestBody:
        description: Project object that needs to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
      security:
      - project_auth:
        - write:projects
        - read:projects
      x-openapi-router-controller: swagger_server.controllers.project_controller
  /project/{projectUuid}:
    get:
      tags:
      - project
      summary: Find project by UUID
      description: Returns a single project
      operationId: get_project_by_uuid
      parameters:
      - name: projectUuid
        in: path
        description: UUID of project to return
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        400:
          description: Invalid UUID supplied
          content: {}
        404:
          description: Project not found
          content: {}
      security:
      - api_key: []
      x-openapi-router-controller: swagger_server.controllers.project_controller
    delete:
      tags:
      - project
      summary: Deletes a project
      operationId: delete_project
      parameters:
      - name: api_key
        in: header
        schema:
          type: string
      - name: projectUuid
        in: path
        description: Project UUID to delete
        required: true
        schema:
          type: string
      responses:
        400:
          description: Invalid UUID supplied
          content: {}
        404:
          description: Project not found
          content: {}
      security:
      - project_auth:
        - write:projects
        - read:projects
      x-openapi-router-controller: swagger_server.controllers.project_controller
  /user:
    post:
      tags:
      - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: create_user
      requestBody:
        description: Created user object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        default:
          description: successful operation
          content: {}
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /user/login:
    get:
      tags:
      - user
      summary: Logs user into the system
      operationId: login_user
      parameters:
      - name: username
        in: query
        description: The user name for login
        required: true
        schema:
          type: string
      - name: password
        in: query
        description: The password for login in clear text
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        400:
          description: Invalid username/password supplied
          content: {}
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /user/logout:
    get:
      tags:
      - user
      summary: Logs out current logged in user session
      operationId: logout_user
      responses:
        default:
          description: successful operation
          content: {}
      x-openapi-router-controller: swagger_server.controllers.user_controller
components:
  schemas:
    Project:
      required:
      - name
      - uuid
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
      example:
        name: name
        uuid: uuid
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        userStatus:
          type: integer
          description: User Status
          format: int32
  securitySchemes:
    project_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore.swagger.io/oauth/authorize
          scopes:
            write:projects: modify projects in your account
            read:projects: read your projects
      x-tokenInfoFunc: swagger_server.controllers.authorization_controller.check_project_auth
      x-scopeValidateFunc: swagger_server.controllers.authorization_controller.validate_scope_project_auth
    api_key:
      type: apiKey
      name: api_key
      in: header
      x-apikeyInfoFunc: swagger_server.controllers.authorization_controller.check_api_key

